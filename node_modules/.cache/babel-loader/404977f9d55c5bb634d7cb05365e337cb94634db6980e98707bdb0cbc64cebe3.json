{"ast":null,"code":"import{useContext}from'react';import{Navigate}from'react-router-dom';import{AuthContext}from'../context/AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children,role}=_ref;const auth=useContext(AuthContext);if(auth.isLoading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});// Or a proper loading spinner\n}if(!auth.isLoggedIn){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});}if(role&&auth.role!==role){return/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true});}return children;};export default ProtectedRoute;","map":{"version":3,"names":["useContext","Navigate","AuthContext","jsx","_jsx","ProtectedRoute","_ref","children","role","auth","isLoading","isLoggedIn","to","replace"],"sources":["C:/Users/Ashwini/Desktop/DPDZERO/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["import { useContext } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nconst ProtectedRoute = ({ children, role }) => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  if (auth.isLoading) {\r\n    return <div>Loading...</div>; // Or a proper loading spinner\r\n  }\r\n\r\n  if (!auth.isLoggedIn) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  if (role && auth.role !== role) {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":"AAAA,OAASA,UAAU,KAAQ,OAAO,CAClC,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,WAAW,KAAQ,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAErD,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAwB,IAAvB,CAAEC,QAAQ,CAAEC,IAAK,CAAC,CAAAF,IAAA,CACxC,KAAM,CAAAG,IAAI,CAAGT,UAAU,CAACE,WAAW,CAAC,CAEpC,GAAIO,IAAI,CAACC,SAAS,CAAE,CAClB,mBAAON,IAAA,QAAAG,QAAA,CAAK,YAAU,CAAK,CAAC,CAAE;AAChC,CAEA,GAAI,CAACE,IAAI,CAACE,UAAU,CAAE,CACpB,mBAAOP,IAAA,CAACH,QAAQ,EAACW,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CACzC,CAEA,GAAIL,IAAI,EAAIC,IAAI,CAACD,IAAI,GAAKA,IAAI,CAAE,CAC9B,mBAAOJ,IAAA,CAACH,QAAQ,EAACW,EAAE,CAAC,GAAG,CAACC,OAAO,MAAE,CAAC,CACpC,CAEA,MAAO,CAAAN,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}