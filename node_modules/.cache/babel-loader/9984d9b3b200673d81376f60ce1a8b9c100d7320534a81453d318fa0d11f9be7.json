{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ashwini\\\\Desktop\\\\DPDZERO\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Mock API function - replace with your actual API calls\n  const mockApi = {\n    get: async endpoint => {\n      // Replace with real API call\n      if (endpoint === '/auth/me') {\n        return {\n          data: JSON.parse(localStorage.getItem('user'))\n        };\n      }\n      return {\n        data: null\n      };\n    },\n    post: async (endpoint, data) => {\n      // Replace with real API call\n      if (endpoint === '/auth/login') {\n        const mockUser = {\n          id: 1,\n          name: data.email.split('@')[0],\n          email: data.email,\n          role: data.email.includes('manager') ? 'manager' : 'employee',\n          token: 'mock-token'\n        };\n        return {\n          data: {\n            user: mockUser,\n            token: 'mock-token'\n          }\n        };\n      }\n      return {\n        data: null\n      };\n    }\n  };\n  useEffect(() => {\n    async function loadUser() {\n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          const response = await mockApi.get('/auth/me');\n          setUser(response.data);\n        }\n      } catch (err) {\n        localStorage.removeItem('token');\n        console.error('Session validation failed:', err);\n      } finally {\n        setLoading(false);\n      }\n    }\n    loadUser();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      setError(null);\n      const response = await mockApi.post('/auth/login', {\n        email,\n        password\n      });\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n      setUser(response.data.user);\n      navigate(response.data.user.role === 'manager' ? '/dashboard' : '/feedback');\n      return response.data;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Login failed');\n      throw err;\n    }\n  };\n  const register = async userData => {\n    try {\n      setError(null);\n      // In a real app, you would call your actual API here\n      const response = await mockApi.post('/auth/register', userData);\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n      setUser(response.data.user);\n      navigate(response.data.user.role === 'manager' ? '/dashboard' : '/feedback');\n      return response.data;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Registration failed');\n      throw err;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n    navigate('/login');\n  };\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!user,\n    isManager: (user === null || user === void 0 ? void 0 : user.role) === 'manager',\n    isEmployee: (user === null || user === void 0 ? void 0 : user.role) === 'employee'\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"d1+zLFPuYCTHzOWgvgMVqQqBcrg=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","navigate","mockApi","get","endpoint","data","JSON","parse","localStorage","getItem","post","mockUser","id","name","email","split","role","includes","token","loadUser","response","err","removeItem","console","login","password","setItem","stringify","_err$response","_err$response$data","message","register","userData","_err$response2","_err$response2$data","logout","value","isAuthenticated","isManager","isEmployee","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","undefined","Error","$RefreshReg$"],"sources":["C:/Users/Ashwini/Desktop/DPDZERO/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Mock API function - replace with your actual API calls\r\n  const mockApi = {\r\n    get: async (endpoint) => {\r\n      // Replace with real API call\r\n      if (endpoint === '/auth/me') {\r\n        return { data: JSON.parse(localStorage.getItem('user')) };\r\n      }\r\n      return { data: null };\r\n    },\r\n    post: async (endpoint, data) => {\r\n      // Replace with real API call\r\n      if (endpoint === '/auth/login') {\r\n        const mockUser = {\r\n          id: 1,\r\n          name: data.email.split('@')[0],\r\n          email: data.email,\r\n          role: data.email.includes('manager') ? 'manager' : 'employee',\r\n          token: 'mock-token'\r\n        };\r\n        return { data: { user: mockUser, token: 'mock-token' } };\r\n      }\r\n      return { data: null };\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function loadUser() {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n          const response = await mockApi.get('/auth/me');\r\n          setUser(response.data);\r\n        }\r\n      } catch (err) {\r\n        localStorage.removeItem('token');\r\n        console.error('Session validation failed:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    \r\n    loadUser();\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      setError(null);\r\n      const response = await mockApi.post('/auth/login', { email, password });\r\n      \r\n      localStorage.setItem('token', response.data.token);\r\n      localStorage.setItem('user', JSON.stringify(response.data.user));\r\n      setUser(response.data.user);\r\n      \r\n      navigate(response.data.user.role === 'manager' ? '/dashboard' : '/feedback');\r\n      \r\n      return response.data;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Login failed');\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      setError(null);\r\n      // In a real app, you would call your actual API here\r\n      const response = await mockApi.post('/auth/register', userData);\r\n      \r\n      localStorage.setItem('token', response.data.token);\r\n      localStorage.setItem('user', JSON.stringify(response.data.user));\r\n      setUser(response.data.user);\r\n      navigate(response.data.user.role === 'manager' ? '/dashboard' : '/feedback');\r\n      \r\n      return response.data;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Registration failed');\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n    navigate('/login');\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    error,\r\n    login,\r\n    register,\r\n    logout,\r\n    isAuthenticated: !!user,\r\n    isManager: user?.role === 'manager',\r\n    isEmployee: user?.role === 'employee'\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}