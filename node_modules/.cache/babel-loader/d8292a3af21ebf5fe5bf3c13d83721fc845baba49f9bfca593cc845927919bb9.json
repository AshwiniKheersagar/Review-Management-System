{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ashwini\\\\Desktop\\\\DPDZERO\\\\frontend\\\\src\\\\components\\\\Team\\\\AddTeamMember.js\";\n// import React, { useState, useEffect } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import {\n//   FiUser,\n//   FiPlus,\n//   FiSearch,\n//   FiLoader,\n//   FiAlertCircle,\n//   FiCheck,\n//   FiUsers\n// } from 'react-icons/fi';\n\n// const AddTeamMember = () => {\n//   const [unassignedEmployees, setUnassignedEmployees] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [successMessage, setSuccessMessage] = useState(null);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const fetchUnassignedEmployees = async () => {\n//       try {\n//         const userData = JSON.parse(localStorage.getItem('userData'));\n//         if (!userData?.token) {\n//           throw new Error('Authentication required');\n//         }\n\n//         const response = await axios.get('http://localhost:8000/employees/unassigned', {\n//           headers: {\n//             Authorization: `Bearer ${userData.token}`\n//           }\n//         });\n//         setUnassignedEmployees(response.data);\n//       } catch (err) {\n//         setError(err.response?.data?.detail || err.message || 'Failed to fetch unassigned employees');\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchUnassignedEmployees();\n//   }, []);\n\n//   const filteredEmployees = unassignedEmployees.filter(employee =>\n//     employee.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//     employee.email.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n\n//   const handleAddToTeam = async (employeeEmail) => {\n//     try {\n//       setLoading(true);\n//       const userData = JSON.parse(localStorage.getItem('userData'));\n\n//       await axios.post('http://localhost:8000/team', {\n//         employee_email: employeeEmail\n//       }, {\n//         headers: {\n//           Authorization: `Bearer ${userData.token}`\n//         }\n//       });\n\n//       // Remove the added employee from the list\n//       setUnassignedEmployees(prev => \n//         prev.filter(emp => emp.email !== employeeEmail)\n//       );\n\n//       setSuccessMessage('Employee added to your team successfully!');\n//       setTimeout(() => setSuccessMessage(null), 3000);\n//     } catch (err) {\n//       setError(err.response?.data?.detail || err.message || 'Failed to add employee to team');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   if (loading && unassignedEmployees.length === 0) {\n//     return (\n//       <div className=\"flex items-center justify-center h-screen\">\n//         <FiLoader className=\"animate-spin text-4xl text-indigo-600\" />\n//       </div>\n//     );\n//   }\n\n//   if (error) {\n//     return (\n//       <div className=\"flex items-center justify-center h-screen\">\n//         <div className=\"text-center p-6 max-w-md bg-white rounded-xl shadow-md\">\n//           <FiAlertCircle className=\"mx-auto text-5xl text-red-500 mb-4\" />\n//           <h2 className=\"text-xl font-bold text-gray-800 mb-2\">Error Loading Employees</h2>\n//           <p className=\"text-gray-600 mb-4\">{error}</p>\n//           <button\n//             onClick={() => window.location.reload()}\n//             className=\"px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition\"\n//           >\n//             Try Again\n//           </button>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 p-4 md:p-8\">\n//       <div className=\"max-w-4xl mx-auto\">\n//         <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center mb-8\">\n//           <div>\n//             <h1 className=\"text-3xl font-bold text-gray-800 mb-2 flex items-center\">\n//               <FiUsers className=\"mr-2\" />\n//               Add Team Members\n//             </h1>\n//             <p className=\"text-gray-600\">\n//               {unassignedEmployees.length} unassigned employee{unassignedEmployees.length !== 1 ? 's' : ''}\n//             </p>\n//           </div>\n\n//           <div className=\"relative mt-4 md:mt-0 w-full md:w-96\">\n//             <FiSearch className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" />\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search employees...\"\n//               className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent w-full\"\n//               value={searchTerm}\n//               onChange={(e) => setSearchTerm(e.target.value)}\n//             />\n//           </div>\n//         </div>\n\n//         {successMessage && (\n//           <div className=\"mb-6 p-4 bg-green-100 text-green-800 rounded-lg flex items-center\">\n//             <FiCheck className=\"mr-2\" />\n//             {successMessage}\n//           </div>\n//         )}\n\n//         {filteredEmployees.length === 0 ? (\n//           <div className=\"bg-white rounded-xl shadow-md p-8 text-center\">\n//             <FiUser className=\"mx-auto text-5xl text-gray-300 mb-4\" />\n//             <h3 className=\"text-xl font-semibold text-gray-700 mb-2\">\n//               {searchTerm ? 'No matching employees found' : 'No unassigned employees available'}\n//             </h3>\n//             <p className=\"text-gray-500 mb-6\">\n//               {searchTerm\n//                 ? 'Try a different search term'\n//                 : 'All employees have been assigned to managers'}\n//             </p>\n//             <button\n//               onClick={() => navigate('/manager/teams')}\n//               className=\"px-6 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition\"\n//             >\n//               Back to Team\n//             </button>\n//           </div>\n//         ) : (\n//           <div className=\"bg-white rounded-xl shadow-md overflow-hidden\">\n//             <div className=\"grid grid-cols-1 divide-y\">\n//               {filteredEmployees.map((employee) => (\n//                 <div key={employee.id} className=\"p-4 hover:bg-gray-50 transition-colors\">\n//                   <div className=\"flex items-center justify-between\">\n//                     <div className=\"flex items-center\">\n//                       <div className=\"bg-indigo-100 text-indigo-600 rounded-full p-3 mr-4\">\n//                         <FiUser className=\"text-xl\" />\n//                       </div>\n//                       <div>\n//                         <h3 className=\"font-bold text-gray-800\">{employee.name}</h3>\n//                         <p className=\"text-gray-500 text-sm\">{employee.email}</p>\n//                       </div>\n//                     </div>\n//                     <button\n//                       onClick={() => handleAddToTeam(employee.email)}\n//                       disabled={loading}\n//                       className={`flex items-center px-4 py-2 rounded-lg ${\n//                         loading\n//                           ? 'bg-gray-300 cursor-not-allowed'\n//                           : 'bg-indigo-600 hover:bg-indigo-700 text-white'\n//                       } transition`}\n//                     >\n//                       {loading ? (\n//                         <FiLoader className=\"animate-spin mr-2\" />\n//                       ) : (\n//                         <FiPlus className=\"mr-2\" />\n//                       )}\n//                       Add to Team\n//                     </button>\n//                   </div>\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AddTeamMember;\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TeamMembers = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Team Members Content\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n_c = TeamMembers;\nexport default TeamMembers;\nvar _c;\n$RefreshReg$(_c, \"TeamMembers\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TeamMembers","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ashwini/Desktop/DPDZERO/frontend/src/components/Team/AddTeamMember.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import {\r\n//   FiUser,\r\n//   FiPlus,\r\n//   FiSearch,\r\n//   FiLoader,\r\n//   FiAlertCircle,\r\n//   FiCheck,\r\n//   FiUsers\r\n// } from 'react-icons/fi';\r\n\r\n// const AddTeamMember = () => {\r\n//   const [unassignedEmployees, setUnassignedEmployees] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n//   const [successMessage, setSuccessMessage] = useState(null);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const fetchUnassignedEmployees = async () => {\r\n//       try {\r\n//         const userData = JSON.parse(localStorage.getItem('userData'));\r\n//         if (!userData?.token) {\r\n//           throw new Error('Authentication required');\r\n//         }\r\n\r\n//         const response = await axios.get('http://localhost:8000/employees/unassigned', {\r\n//           headers: {\r\n//             Authorization: `Bearer ${userData.token}`\r\n//           }\r\n//         });\r\n//         setUnassignedEmployees(response.data);\r\n//       } catch (err) {\r\n//         setError(err.response?.data?.detail || err.message || 'Failed to fetch unassigned employees');\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchUnassignedEmployees();\r\n//   }, []);\r\n\r\n//   const filteredEmployees = unassignedEmployees.filter(employee =>\r\n//     employee.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n//     employee.email.toLowerCase().includes(searchTerm.toLowerCase())\r\n//   );\r\n\r\n//   const handleAddToTeam = async (employeeEmail) => {\r\n//     try {\r\n//       setLoading(true);\r\n//       const userData = JSON.parse(localStorage.getItem('userData'));\r\n      \r\n//       await axios.post('http://localhost:8000/team', {\r\n//         employee_email: employeeEmail\r\n//       }, {\r\n//         headers: {\r\n//           Authorization: `Bearer ${userData.token}`\r\n//         }\r\n//       });\r\n\r\n//       // Remove the added employee from the list\r\n//       setUnassignedEmployees(prev => \r\n//         prev.filter(emp => emp.email !== employeeEmail)\r\n//       );\r\n      \r\n//       setSuccessMessage('Employee added to your team successfully!');\r\n//       setTimeout(() => setSuccessMessage(null), 3000);\r\n//     } catch (err) {\r\n//       setError(err.response?.data?.detail || err.message || 'Failed to add employee to team');\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   if (loading && unassignedEmployees.length === 0) {\r\n//     return (\r\n//       <div className=\"flex items-center justify-center h-screen\">\r\n//         <FiLoader className=\"animate-spin text-4xl text-indigo-600\" />\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   if (error) {\r\n//     return (\r\n//       <div className=\"flex items-center justify-center h-screen\">\r\n//         <div className=\"text-center p-6 max-w-md bg-white rounded-xl shadow-md\">\r\n//           <FiAlertCircle className=\"mx-auto text-5xl text-red-500 mb-4\" />\r\n//           <h2 className=\"text-xl font-bold text-gray-800 mb-2\">Error Loading Employees</h2>\r\n//           <p className=\"text-gray-600 mb-4\">{error}</p>\r\n//           <button\r\n//             onClick={() => window.location.reload()}\r\n//             className=\"px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition\"\r\n//           >\r\n//             Try Again\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 p-4 md:p-8\">\r\n//       <div className=\"max-w-4xl mx-auto\">\r\n//         <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center mb-8\">\r\n//           <div>\r\n//             <h1 className=\"text-3xl font-bold text-gray-800 mb-2 flex items-center\">\r\n//               <FiUsers className=\"mr-2\" />\r\n//               Add Team Members\r\n//             </h1>\r\n//             <p className=\"text-gray-600\">\r\n//               {unassignedEmployees.length} unassigned employee{unassignedEmployees.length !== 1 ? 's' : ''}\r\n//             </p>\r\n//           </div>\r\n          \r\n//           <div className=\"relative mt-4 md:mt-0 w-full md:w-96\">\r\n//             <FiSearch className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" />\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Search employees...\"\r\n//               className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent w-full\"\r\n//               value={searchTerm}\r\n//               onChange={(e) => setSearchTerm(e.target.value)}\r\n//             />\r\n//           </div>\r\n//         </div>\r\n\r\n//         {successMessage && (\r\n//           <div className=\"mb-6 p-4 bg-green-100 text-green-800 rounded-lg flex items-center\">\r\n//             <FiCheck className=\"mr-2\" />\r\n//             {successMessage}\r\n//           </div>\r\n//         )}\r\n\r\n//         {filteredEmployees.length === 0 ? (\r\n//           <div className=\"bg-white rounded-xl shadow-md p-8 text-center\">\r\n//             <FiUser className=\"mx-auto text-5xl text-gray-300 mb-4\" />\r\n//             <h3 className=\"text-xl font-semibold text-gray-700 mb-2\">\r\n//               {searchTerm ? 'No matching employees found' : 'No unassigned employees available'}\r\n//             </h3>\r\n//             <p className=\"text-gray-500 mb-6\">\r\n//               {searchTerm\r\n//                 ? 'Try a different search term'\r\n//                 : 'All employees have been assigned to managers'}\r\n//             </p>\r\n//             <button\r\n//               onClick={() => navigate('/manager/teams')}\r\n//               className=\"px-6 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition\"\r\n//             >\r\n//               Back to Team\r\n//             </button>\r\n//           </div>\r\n//         ) : (\r\n//           <div className=\"bg-white rounded-xl shadow-md overflow-hidden\">\r\n//             <div className=\"grid grid-cols-1 divide-y\">\r\n//               {filteredEmployees.map((employee) => (\r\n//                 <div key={employee.id} className=\"p-4 hover:bg-gray-50 transition-colors\">\r\n//                   <div className=\"flex items-center justify-between\">\r\n//                     <div className=\"flex items-center\">\r\n//                       <div className=\"bg-indigo-100 text-indigo-600 rounded-full p-3 mr-4\">\r\n//                         <FiUser className=\"text-xl\" />\r\n//                       </div>\r\n//                       <div>\r\n//                         <h3 className=\"font-bold text-gray-800\">{employee.name}</h3>\r\n//                         <p className=\"text-gray-500 text-sm\">{employee.email}</p>\r\n//                       </div>\r\n//                     </div>\r\n//                     <button\r\n//                       onClick={() => handleAddToTeam(employee.email)}\r\n//                       disabled={loading}\r\n//                       className={`flex items-center px-4 py-2 rounded-lg ${\r\n//                         loading\r\n//                           ? 'bg-gray-300 cursor-not-allowed'\r\n//                           : 'bg-indigo-600 hover:bg-indigo-700 text-white'\r\n//                       } transition`}\r\n//                     >\r\n//                       {loading ? (\r\n//                         <FiLoader className=\"animate-spin mr-2\" />\r\n//                       ) : (\r\n//                         <FiPlus className=\"mr-2\" />\r\n//                       )}\r\n//                       Add to Team\r\n//                     </button>\r\n//                   </div>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AddTeamMember;\r\n\r\nimport React from 'react';\r\n\r\nconst TeamMembers = () => {\r\n  return (\r\n    <div>Team Members Content</div>\r\n  );\r\n};\r\n\r\nexport default TeamMembers;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB,oBACED,OAAA;IAAAE,QAAA,EAAK;EAAoB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEnC,CAAC;AAACC,EAAA,GAJIN,WAAW;AAMjB,eAAeA,WAAW;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}