{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ashwini\\\\Desktop\\\\DPDZERO\\\\frontend\\\\src\\\\hooks\\\\useAuth.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  role: null,\n  name: null,\n  login: () => {},\n  logout: () => {}\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [authState, setAuthState] = useState({\n    isLoggedIn: false,\n    userId: null,\n    token: null,\n    role: null,\n    name: null\n  });\n  useEffect(() => {\n    // Check for stored auth data on initial load\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (storedData && storedData.token) {\n      setAuthState({\n        isLoggedIn: true,\n        userId: storedData.userId,\n        token: storedData.token,\n        role: storedData.role,\n        name: storedData.name\n      });\n    }\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await fetch('http://localhost:8000/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Login failed');\n      }\n      const data = await response.json();\n\n      // Store the received token and user data\n      const userData = {\n        token: data.token,\n        userId: data.user_id,\n        // From decoded token\n        role: data.role,\n        name: data.name\n      };\n      localStorage.setItem('userData', JSON.stringify(userData));\n      setAuthState({\n        isLoggedIn: true,\n        ...userData\n      });\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('userData');\n    setAuthState({\n      isLoggedIn: false,\n      userId: null,\n      token: null,\n      role: null,\n      name: null\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: authState.isLoggedIn,\n      userId: authState.userId,\n      token: authState.token,\n      role: authState.role,\n      name: authState.name,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5tPaDgikg7mXgOYzHqvsc3SNBeQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","isLoggedIn","userId","token","role","name","login","logout","AuthProvider","children","_s","authState","setAuthState","storedData","JSON","parse","localStorage","getItem","email","password","response","fetch","method","headers","body","stringify","ok","Error","data","json","userData","user_id","setItem","error","console","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ashwini/Desktop/DPDZERO/frontend/src/hooks/useAuth.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null,\r\n  token: null,\r\n  role: null,\r\n  name: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [authState, setAuthState] = useState({\r\n    isLoggedIn: false,\r\n    userId: null,\r\n    token: null,\r\n    role: null,\r\n    name: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Check for stored auth data on initial load\r\n    const storedData = JSON.parse(localStorage.getItem('userData'));\r\n    if (storedData && storedData.token) {\r\n      setAuthState({\r\n        isLoggedIn: true,\r\n        userId: storedData.userId,\r\n        token: storedData.token,\r\n        role: storedData.role,\r\n        name: storedData.name,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Login failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      // Store the received token and user data\r\n      const userData = {\r\n        token: data.token,\r\n        userId: data.user_id,  // From decoded token\r\n        role: data.role,\r\n        name: data.name,\r\n      };\r\n\r\n      localStorage.setItem('userData', JSON.stringify(userData));\r\n      \r\n      setAuthState({\r\n        isLoggedIn: true,\r\n        ...userData\r\n      });\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('userData');\r\n    setAuthState({\r\n      isLoggedIn: false,\r\n      userId: null,\r\n      token: null,\r\n      role: null,\r\n      name: null,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLoggedIn: authState.isLoggedIn,\r\n        userId: authState.userId,\r\n        token: authState.token,\r\n        role: authState.role,\r\n        name: authState.name,\r\n        login,\r\n        logout,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}